// <auto-generated />
using System;
using EfCoreDemo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EfCoreDemo.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EfCoreDemo.Models.ItemTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemTag");
                });

            modelBuilder.Entity("EfCoreDemo.Models.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("EfCoreDemo.Models.ShopItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(20, 2)
                        .HasColumnType("decimal(20,2)");

                    b.Property<int?>("ShopId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.ToTable("ShopItems");
                });

            modelBuilder.Entity("EfCoreDemo.Models.ShopItemItemTag", b =>
                {
                    b.Property<int>("ShopItemId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemTagId")
                        .HasColumnType("int");

                    b.HasKey("ShopItemId", "TagId");

                    b.HasIndex("ItemTagId");

                    b.ToTable("ShopItemItemTags");
                });

            modelBuilder.Entity("EfCoreDemo.Models.ShopItem", b =>
                {
                    b.HasOne("EfCoreDemo.Models.Shop", "Shop")
                        .WithMany("ShopItems")
                        .HasForeignKey("ShopId");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("EfCoreDemo.Models.ShopItemItemTag", b =>
                {
                    b.HasOne("EfCoreDemo.Models.ItemTag", "ItemTag")
                        .WithMany("ShopItemItemTags")
                        .HasForeignKey("ItemTagId");

                    b.HasOne("EfCoreDemo.Models.ShopItem", "ShopItem")
                        .WithMany("ShopItemItemTags")
                        .HasForeignKey("ShopItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemTag");

                    b.Navigation("ShopItem");
                });

            modelBuilder.Entity("EfCoreDemo.Models.ItemTag", b =>
                {
                    b.Navigation("ShopItemItemTags");
                });

            modelBuilder.Entity("EfCoreDemo.Models.Shop", b =>
                {
                    b.Navigation("ShopItems");
                });

            modelBuilder.Entity("EfCoreDemo.Models.ShopItem", b =>
                {
                    b.Navigation("ShopItemItemTags");
                });
#pragma warning restore 612, 618
        }
    }
}
